# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master
- develop
- feature/*
- release/*

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build application
  jobs:
  - job: Build
    displayName: Nodejs Build
    steps:
    - task: Npm@1
      displayName: npm install
      inputs:
        command: 'install'
        workingDir: 'src'
- stage: Scan Vulnerability
  displayName: Scan vulnerability application
  jobs:
  - job: Vulnerability
    displayName: Npm Vulnerability
    steps:
    - task: Npm@1
      displayName: npm audit
      inputs:
        command: 'custom'
        workingDir: 'src'
        customCommand: 'audit'
  - job: Vulnerability
    displayName: WhiteSource Vulnerability
    steps:
    - task: WhiteSource@20
      inputs:
        cwd: '$(System.DefaultWorkingDirectory)'
        projectName: 'devsecops'

- stage: Code Quality
  displayName: Scan Code Quality
  jobs:
  - job: Sonar
    displayName: Sonar
    steps:
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonarcloud'
        organization: 'vinhtuanpham'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'vinhtuanpham'
        cliProjectName: 'devsecops'
        cliSources: 'src'
        extraProperties: |
          # Additional properties that will be passed to the scanner, 
          # Put one key=value per line, example:
          # sonar.exclusions=**/*.bin
          sonar.coverage.exclusions = "**/test/","**/server.js"

    - task: SonarCloudAnalyze@1

    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
- stage: Docker
  displayName: Build application container
  jobs:
  - job: Build
    displayName: Build Docker
    steps:

    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        repository: 'vinhpt90/devsecops'
        command: 'buildAndPush'
        Dockerfile: 'src/Dockerfile'
        tags: '$(Build.SourceBranchName).$(Build.BuildId)'


